{{- $c := .kanagawa.dragon -}}
{{- $kb := .keybindings -}}
// Niri configuration for CachyOS
// For documentation and full reference, see: https://github.com/YaLTeR/niri/wiki

// ────────────── Input Configuration ──────────────
// https://github.com/YaLTeR/niri/wiki/Configuration:-Input

input {
    keyboard {
        xkb {
            layout "us" // Use the German keyboard layout
        }
        numlock // Enable numlock on startup
    }

    touchpad {
        tap // Enable tap-to-click
        natural-scroll // Enable natural (macOS-style) scrolling
    }

    focus-follows-mouse max-scroll-amount="0%" // Focus windows under mouse, but don't scroll
    workspace-auto-back-and-forth // Enable workspace back & forth switching
}

// ────────────── Output Configuration ──────────────
// You can run `niri msg outputs` to get the correct name for your displays.
// You will have to remove "/-" and edit it before it takes effect.
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs

/- output "DP-1" {
    mode "2560x1440@359.979" // Set resolution and refresh rate
    scale 1 // No scaling (use 2 for HiDPI)
}

// ────────────── Keybindings ──────────────
// https://github.com/YaLTeR/niri/wiki/Configuration:-Key-Bindings

binds {
    MOD+SHIFT+ESCAPE                     { show-hotkey-overlay; }

    // ─── Applications ───
    // Semantic invocations - launch applications
    {{ template "keybind-invoke.tmpl" (dict "action" "terminal" "context" "niri" "keybindings" $kb) }} hotkey-overlay-title="Open Terminal: alacritty" { spawn-sh "alacritty"; }
    {{ template "keybind-invoke.tmpl" (dict "action" "launcher" "context" "niri" "keybindings" $kb) }} hotkey-overlay-title="Open App Launcher: wofi" { spawn-sh "wofi"; }
    {{ template "keybind-invoke.tmpl" (dict "action" "browser" "context" "niri" "keybindings" $kb) }} hotkey-overlay-title="Open Browser: qutebrowser" { spawn-sh "qutebrowser"; }
    MOD+ALT+L                           hotkey-overlay-title="Lock Screen: swaylock" { spawn-sh "swaylock"; }

    // Please choose your own file manager
    {{ template "keybind-invoke.tmpl" (dict "action" "files" "context" "niri" "keybindings" $kb) }} hotkey-overlay-title="File Manager: Nautilus" { spawn-sh "nautilus"; }

    // ─── Audio Controls ───
    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86AudioRaiseVolume                allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    XF86AudioLowerVolume                allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    XF86AudioMute                       allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    XF86AudioMicMute                    allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }
    XF86AudioNext                       allow-when-locked=true { spawn-sh "playerctl next"; }
    XF86AudioPause                      allow-when-locked=true { spawn-sh "playerctl play-pause"; }
    XF86AudioPlay                       allow-when-locked=true { spawn-sh "playerctl play-pause"; }
    XF86AudioPrev                       allow-when-locked=true { spawn-sh "playerctl previous"; }

    // ─── Window Movement and Focus ───
    // Semantic dismissal - close current window
    {{ template "keybind-dismiss.tmpl" (dict "action" "current" "context" "niri" "keybindings" $kb) }} { close-window; }

    // Semantic navigation - focus windows
    MOD+LEFT                            { focus-column-left; }
    {{ template "keybind-nav.tmpl" (dict "action" "prev" "context" "niri" "keybindings" $kb) }} { focus-column-left; }
    MOD+RIGHT                           { focus-column-right; }
    {{ template "keybind-nav.tmpl" (dict "action" "next" "context" "niri" "keybindings" $kb) }} { focus-column-right; }
    MOD+UP                              { focus-window-up; }
    {{ template "keybind-nav.tmpl" (dict "action" "up" "context" "niri" "keybindings" $kb) }} { focus-window-up; }
    MOD+DOWN                            { focus-window-down; }
    {{ template "keybind-nav.tmpl" (dict "action" "down" "context" "niri" "keybindings" $kb) }} { focus-window-down; }

    // Semantic manipulation - move windows
    MOD+CTRL+LEFT                       { move-column-left; }
    {{ template "keybind-manipulate.tmpl" (dict "action" "move_prev" "context" "niri" "keybindings" $kb) }} { move-column-left; }
    MOD+CTRL+RIGHT                      { move-column-right; }
    {{ template "keybind-manipulate.tmpl" (dict "action" "move_next" "context" "niri" "keybindings" $kb) }} { move-column-right; }
    MOD+CTRL+UP                         { move-window-up; }
    {{ template "keybind-manipulate.tmpl" (dict "action" "move_up" "context" "niri" "keybindings" $kb) }} { move-window-up; }
    MOD+CTRL+DOWN                       { move-window-down; }
    {{ template "keybind-manipulate.tmpl" (dict "action" "move_down" "context" "niri" "keybindings" $kb) }} { move-window-down; }

    // ─── Consume/Expel Windows (Column Management) ───
    MOD+COMMA                           { consume-window-into-column; }
    MOD+PERIOD                          { expel-window-from-column; }
    MOD+BRACKETLEFT                     { consume-or-expel-window-left; }
    MOD+BRACKETRIGHT                    { consume-or-expel-window-right; }

    MOD+HOME                            { focus-column-first; }
    MOD+END                             { focus-column-last; }
    MOD+CTRL+HOME                       { move-column-to-first; }
    MOD+CTRL+END                        { move-column-to-last; }

    MOD+SHIFT+LEFT                      { focus-monitor-left; }
    MOD+SHIFT+RIGHT                     { focus-monitor-right; }
    MOD+SHIFT+UP                        { focus-monitor-up; }
    MOD+SHIFT+DOWN                      { focus-monitor-down; }

    MOD+SHIFT+CTRL+LEFT                 { move-column-to-monitor-left; }
    MOD+SHIFT+CTRL+RIGHT                { move-column-to-monitor-right; }
    MOD+SHIFT+CTRL+UP                   { move-column-to-monitor-up; }
    MOD+SHIFT+CTRL+DOWN                 { move-column-to-monitor-down; }

    // ─── Workspace Switching ───
    MOD+WHEELSCROLLDOWN                 cooldown-ms=150 { focus-workspace-down; }
    MOD+WHEELSCROLLUP                   cooldown-ms=150 { focus-workspace-up; }
    MOD+CTRL+WHEELSCROLLDOWN            cooldown-ms=150 { move-column-to-workspace-down; }
    MOD+CTRL+WHEELSCROLLUP              cooldown-ms=150 { move-column-to-workspace-up; }

    MOD+WHEELSCROLLRIGHT                { focus-column-right; }
    MOD+WHEELSCROLLLEFT                 { focus-column-left; }
    MOD+CTRL+WHEELSCROLLRIGHT           { move-column-right; }
    MOD+CTRL+WHEELSCROLLLEFT            { move-column-left; }

    MOD+SHIFT+WHEELSCROLLDOWN           { focus-column-right; }
    MOD+SHIFT+WHEELSCROLLUP             { focus-column-left; }
    MOD+CTRL+SHIFT+WHEELSCROLLDOWN      { move-column-right; }
    MOD+CTRL+SHIFT+WHEELSCROLLUP        { move-column-left; }

    MOD+1                               { focus-workspace 1; }
    MOD+2                               { focus-workspace 2; }
    MOD+3                               { focus-workspace 3; }
    MOD+4                               { focus-workspace 4; }
    MOD+5                               { focus-workspace 5; }
    MOD+6                               { focus-workspace 6; }
    MOD+7                               { focus-workspace 7; }
    MOD+8                               { focus-workspace 8; }
    MOD+9                               { focus-workspace 9; }

    MOD+CTRL+1                          { move-column-to-workspace 1; }
    MOD+CTRL+2                          { move-column-to-workspace 2; }
    MOD+CTRL+3                          { move-column-to-workspace 3; }
    MOD+CTRL+4                          { move-column-to-workspace 4; }
    MOD+CTRL+5                          { move-column-to-workspace 5; }
    MOD+CTRL+6                          { move-column-to-workspace 6; }
    MOD+CTRL+7                          { move-column-to-workspace 7; }
    MOD+CTRL+8                          { move-column-to-workspace 8; }
    MOD+CTRL+9                          { move-column-to-workspace 9; }

    MOD+TAB                             { focus-workspace-down; }      // Next workspace
    MOD+SHIFT+TAB                       { focus-workspace-up; }        // Previous workspace

    // ─── Layout Controls ───
    MOD+CTRL+F                          { expand-column-to-available-width; }
    MOD+C                               { center-column; }
    MOD+CTRL+C                          { center-visible-columns; }
    // Binary width toggle - "The stone is either whole or halved"
    MOD+W                               { switch-preset-column-width; }

    // Screenshot - PrtSc is now a MOD key, so we need a new binding
    MOD+SHIFT+S                         { screenshot; }
    MOD+CTRL+S                          { screenshot-screen; }
    MOD+ALT+S                           { screenshot-window; }
    MOD+SHIFT+MINUS                     { set-window-height "-10%"; }
    MOD+SHIFT+EQUAL                     { set-window-height "+10%"; }

    // ─── Modes ───
    // Semantic transformations - change window/display states
    {{ template "keybind-transform.tmpl" (dict "action" "floating" "context" "niri" "keybindings" $kb) }} { toggle-window-floating; }
    {{ template "keybind-transform.tmpl" (dict "action" "fullscreen" "context" "niri" "keybindings" $kb) }} { fullscreen-window; }
    {{ template "keybind-transform.tmpl" (dict "action" "tabbed" "context" "niri" "keybindings" $kb) }} { toggle-column-tabbed-display; }

    // ─── Screenshots ───
    CTRL+SHIFT+1                        { screenshot; }
    CTRL+SHIFT+2                        { screenshot-screen; }
    CTRL+SHIFT+3                        { screenshot-window; }

    // ─── Emergency Escape Key ───
    // Use this when a fullscreen app blocks your keybinds.
    // It disables any active keyboard shortcut inhibitor, restoring control.
    MOD+ESCAPE                          allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // ─── Exit / Power ───
    CTRL+ALT+DELETE                     { quit; } // Also quits Niri
    MOD+SHIFT+P                         { power-off-monitors; } // Turn off screens (useful for OLED or privacy)
    MOD+O                               repeat=false { toggle-overview; }
}

// ────────────── Startup Applications ──────────────
// https://github.com/YaLTeR/niri/wiki/Configuration:-Miscellaneous#spawn-sh-at-startup

    spawn-sh-at-startup "/usr/lib/polkit-kde-authentication-agent-1 &" // Polkit
    spawn-sh-at-startup "swww-daemon" // Wallpaper daemon
    spawn-sh-at-startup "swww img /usr/share/wallpapers/cachyos-wallpapers/GreenFeathers.png" // Set wallpaper
    spawn-sh-at-startup "waybar" // Launch waybar

    prefer-no-csd // Disable program decorations
    screenshot-path null // Disable screenshot saving

// ────────────── Layout Settings ──────────────
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout

    layout {
        gaps 4 // Ultra-minimal gap - nearly touching
        center-focused-column "never" // Don't auto-center focused column

        preset-column-widths {
            proportion 0.5      // Half - balanced duality
            proportion 1.0      // Full - complete unity
        }

        focus-ring {
            width 2
            active-color {{ template "color-quoted.tmpl" $c.focus }}
            inactive-color {{ template "color-quoted.tmpl" $c.selection }}
        }

        tab-indicator {
            place-within-column // Tabs inside to ensure visibility
            width 4 // Width of the indicator bar
            gap 4 // Tighter gap from window edge
            position "left" // Show on left side of window
            active-color {{ template "color-quoted.tmpl" $c.focus }}
            inactive-color {{ template "color-quoted.tmpl" $c.selection }}
        }

        shadow {
            softness 30
            spread 5
            offset x=0 y=5
            color {{ template "color-quoted.tmpl" $c.shadow }}
        }

        struts {}
    }

// ────────────── Animation Settings ──────────────
// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
    animations {
        workspace-switch {
            spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
        }
        window-open {
            duration-ms 200
            curve "ease-out-quad"
        }
        window-close {
            duration-ms 200
            curve "ease-out-cubic"
        }
        horizontal-view-movement {
            spring damping-ratio=1.0 stiffness=900 epsilon=0.0001
        }
        window-movement {
            spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
        }
        window-resize {
            spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
        }
        config-notification-open-close {
            spring damping-ratio=0.6 stiffness=1200 epsilon=0.001
        }
        screenshot-ui-open {
            duration-ms 300
            curve "ease-out-quad"
        }
        overview-open-close {
            spring damping-ratio=1.0 stiffness=900 epsilon=0.0001
        }
    }

// ────────────── Window Rules ──────────────
// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules

    window-rule {
        match app-id=r#"firefox$"# title="^Picture-in-Picture$"
        open-floating true // Always float Firefox PiP windows
    }

    window-rule {
        geometry-corner-radius 6 // Subtle rounded corners
        clip-to-geometry true
    }

// ────────────── Environment Variables ──────────────
// https://github.com/YaLTeR/niri/wiki/Configuration:-Miscellaneous#environment

    environment {
        DISPLAY ":1"
        ELECTRON_OZONE_PLATFORM_HINT "auto"
        QT_QPA_PLATFORM "wayland"
        QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
        XDG_SESSION_TYPE "wayland"
        XDG_CURRENT_DESKTOP "niri"
    }

    hotkey-overlay {
        skip-at-startup
    }
