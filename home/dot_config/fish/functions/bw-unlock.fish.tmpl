# Ultra-Zen Bitwarden Session Management
# "The vault opens when intention aligns with authentication"

function bw-unlock --description "Unlock Bitwarden vault with semantic session management"
    # Check if already unlocked
    if test -n "$BW_SESSION"
        # Verify session is still valid
        if bw status --raw | jq -r '.status' | string match -q "unlocked"
            echo "{{ template "color-hex.tmpl" .kanagawa.dragon.green }}✓{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Vault already unlocked"
            return 0
        else
            # Session expired - clear it
            set -e BW_SESSION
        end
    end

    # Check if logged in
    set -l vault_status (bw status --raw | jq -r '.status')

    switch $vault_status
        case "unauthenticated"
            echo "{{ template "color-hex.tmpl" .kanagawa.dragon.blue }}→{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Logging in to Bitwarden..."
            set -l email (read -P "Email: " | string trim)

            if test -z "$email"
                echo "{{ template "color-hex.tmpl" .kanagawa.dragon.red }}✗{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Login cancelled"
                return 1
            end

            # Login and get session in one step
            set -l session (bw login $email --raw)
            if test $status -eq 0
                set -gx BW_SESSION $session
                echo "{{ template "color-hex.tmpl" .kanagawa.dragon.green }}✓{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Successfully logged in and unlocked"
            else
                echo "{{ template "color-hex.tmpl" .kanagawa.dragon.red }}✗{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Login failed"
                return 1
            end

        case "locked"
            echo "{{ template "color-hex.tmpl" .kanagawa.dragon.blue }}→{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Unlocking vault..."

            # Unlock and capture session
            set -l session (bw unlock --raw)
            if test $status -eq 0
                set -gx BW_SESSION $session
                echo "{{ template "color-hex.tmpl" .kanagawa.dragon.green }}✓{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Vault unlocked"
            else
                echo "{{ template "color-hex.tmpl" .kanagawa.dragon.red }}✗{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Failed to unlock vault"
                return 1
            end

        case "unlocked"
            # This shouldn't happen if we reach here, but handle gracefully
            set -gx BW_SESSION (bw unlock --raw)
            echo "{{ template "color-hex.tmpl" .kanagawa.dragon.green }}✓{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Vault unlocked"
    end

    # Sync vault after unlock for latest data
    echo "{{ template "color-hex.tmpl" .kanagawa.dragon.blue }}↻{{ template "color-hex.tmpl" .kanagawa.dragon.white }} Syncing vault..."
    bw sync
end